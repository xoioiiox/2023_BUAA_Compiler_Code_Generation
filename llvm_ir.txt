declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
define dso_local void @fun1() {
fun10:
	%1 = alloca i32
	%2 = alloca i32
	store i32 4, i32* %2
	%3 = alloca i32
	store i32 6, i32* %3
	%4 = load i32, i32* %2
	store i32 %4, i32* %3
	store i32 3, i32* %1
	%5 = load i32, i32* %1
	%6 = srem i32 %5, 20
	%7 = sub i32 %6, 1
	%8 = add i32 %7, 9
	store i32 %8, i32* %1
	%9 = alloca i32
	store i32 0, i32* %9
fun110:
	%11 = load i32, i32* %9
	%12 = icmp sle i32 %11, 7
	br i1 %12, label %fun113, label %fun128
fun113:
	%14 = load i32, i32* %9
	%15 = add i32 %14, 1
	store i32 %15, i32* %9
fun116:
	%17 = load i32, i32* %1
	%18 = load i32, i32* %9
	%19 = icmp eq i32 %17, %18
	br i1 %19, label %fun120, label %fun124
fun120:
	%21 = load i32, i32* %2
	%22 = load i32, i32* %1
	%23 = add i32 %21, %22
	store i32 %23, i32* %2
	br label %fun127
	br label %fun124
fun124:
	%25 = load i32, i32* %1
	%26 = sub i32 %25, 1
	store i32 %26, i32* %1
fun127:
	br label %fun110
fun128:
	call void @putch (i32 106)
	call void @putch (i32 32)
	call void @putch (i32 58)
	call void @putch (i32 32)
	%29 = load i32, i32* %1
	call void @putint(i32 %29)
	call void @putch (i32 44)
	call void @putch (i32 32)
	call void @putch (i32 107)
	call void @putch (i32 32)
	call void @putch (i32 58)
	call void @putch (i32 32)
	%30 = load i32, i32* %2
	call void @putint(i32 %30)
	call void @putch (i32 44)
	call void @putch (i32 32)
	call void @putch (i32 108)
	call void @putch (i32 32)
	call void @putch (i32 58)
	call void @putch (i32 32)
	%31 = load i32, i32* %3
	call void @putint(i32 %31)
	call void @putch (i32 10)
	ret void
}

define dso_local i32 @fun2(i32 %0) {
fun21:
	%2 = alloca i32
	store i32 1, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
fun24:
	%5 = load i32, i32* %0
	%6 = icmp sge i32 %5, 1
	br i1 %6, label %fun27, label %fun224
fun27:
	%8 = load i32, i32* %2
	%9 = load i32, i32* %0
	%10 = mul i32 %8, %9
	store i32 %10, i32* %2
	%11 = load i32, i32* %0
	%12 = sub i32 %11, 1
	store i32 %12, i32* %0
fun213:
	%14 = load i32, i32* %0
	%15 = icmp eq i32 %14, 1
	br i1 %15, label %fun216, label %fun217
fun216:
	br label %fun224
	br label %fun223
fun217:
	%18 = load i32, i32* %0
	%19 = icmp ne i32 %18, 1
	br i1 %19, label %fun220, label %fun223
fun220:
	%21 = load i32, i32* %3
	%22 = add i32 %21, 1
	store i32 %22, i32* %3
	br label %fun223
fun223:
	br label %fun24
fun224:
	call void @putch (i32 97)
	call void @putch (i32 33)
	call void @putch (i32 32)
	call void @putch (i32 61)
	call void @putch (i32 32)
	%25 = load i32, i32* %2
	call void @putint(i32 %25)
	call void @putch (i32 44)
	call void @putch (i32 32)
	call void @putch (i32 110)
	call void @putch (i32 117)
	call void @putch (i32 109)
	call void @putch (i32 32)
	call void @putch (i32 61)
	call void @putch (i32 32)
	%26 = load i32, i32* %3
	call void @putint(i32 %26)
	call void @putch (i32 10)
	ret i32 1
}

define dso_local i32 @fun3(i32 %0, i32 %1) {
fun32:
	%3 = load i32, i32* %0
	%4 = load i32, i32* %1
	%5 = icmp sgt i32 %3, %4
	br i1 %5, label %fun36, label %fun38
fun36:
	%7 = load i32, i32* %0
	ret i32 %7
	br label %fun314
fun38:
	%9 = load i32, i32* %0
	%10 = load i32, i32* %1
	%11 = icmp slt i32 %9, %10
	br i1 %11, label %fun312, label %fun314
fun312:
	%13 = load i32, i32* %1
	ret i32 %13
	br label %fun314
fun314:
	%15 = load i32, i32* %0
	ret i32 %15
}

define dso_local i32 @gcd(i32 %0, i32 %1) {
gcd2:
	%3 = load i32, i32* %0
	%4 = load i32, i32* %1
	%5 = srem i32 %3, %4
	%6 = icmp eq i32 %5, 0
	br i1 %6, label %gcd7, label %gcd9
gcd7:
	%8 = load i32, i32* %1
	ret i32 %8
	br label %gcd9
gcd9:
	%10 = load i32, i32* %1
	%11 = load i32, i32* %0
	%12 = load i32, i32* %1
	%13 = srem i32 %11, %12
	%14 = call i32 @gcd(i32 %10, i32 %13)
	ret i32 %14
}

define dso_local i32 @lcm(i32 %0, i32 %1) {
lcm2:
	%3 = alloca i32
	%4 = load i32, i32* %0
	%5 = load i32, i32* %1
	%6 = call i32 @gcd(i32 %4, i32 %5)
	store i32 %6, i32* %3
	%7 = load i32, i32* %0
	%8 = load i32, i32* %1
	%9 = mul i32 %7, %8
	%10 = load i32, i32* %3
	%11 = sdiv i32 %9, %10
	ret i32 %11
}

define dso_local void @fun4(i32 %0, i32 %1, i32 %2) {
fun43:
	%4 = alloca i32
	%5 = load i32, i32* %0
	%6 = load i32, i32* %1
	%7 = add i32 %5, %6
	%8 = load i32, i32* %2
	%9 = sub i32 %7, %8
	%10 = load i32, i32* %0
	%11 = mul i32 %9, %10
	store i32 %11, i32* %4
	%12 = load i32, i32* %4
	call void @putint(i32 %12)
	call void @putch (i32 10)
	ret void
}

define dso_local i32 @fun5(i32 %0) {
fun51:
	%2 = load i32, i32* %0
	%3 = icmp eq i32 %2, 1
	br i1 %3, label %fun54, label %fun55
fun54:
	ret i32 1
	br label %fun59
fun55:
	%6 = load i32, i32* %0
	%7 = icmp eq i32 %6, 2
	br i1 %7, label %fun58, label %fun59
fun58:
	ret i32 1
	br label %fun59
fun59:
	%10 = load i32, i32* %0
	%11 = sub i32 %10, 1
	%12 = call i32 @fun5(i32 %11)
	%13 = load i32, i32* %0
	%14 = sub i32 %13, 2
	%15 = call i32 @fun5(i32 %14)
	%16 = add i32 %12, %15
	ret i32 %16
}

define dso_local i32 @main() {
main0:
	call void @fun1()
	%1 = call i32 @fun2(i32 6)
	%2 = call i32 @fun3(i32 3, i32 6)
	%3 = call i32 @fun3(i32 2, i32 %2)
	call void @putint(i32 %3)
	call void @putch (i32 10)
	%4 = alloca i32
	%5 = alloca i32
	call void @putch (i32 115)
	call void @putch (i32 99)
	call void @putch (i32 97)
	call void @putch (i32 110)
	call void @putch (i32 102)
	call void @putch (i32 32)
	call void @putch (i32 97)
	call void @putch (i32 44)
	call void @putch (i32 32)
	call void @putch (i32 98)
	call void @putch (i32 32)
	call void @putch (i32 116)
	call void @putch (i32 111)
	call void @putch (i32 32)
	call void @putch (i32 103)
	call void @putch (i32 101)
	call void @putch (i32 116)
	call void @putch (i32 32)
	call void @putch (i32 103)
	call void @putch (i32 99)
	call void @putch (i32 100)
	call void @putch (i32 32)
	call void @putch (i32 97)
	call void @putch (i32 110)
	call void @putch (i32 100)
	call void @putch (i32 32)
	call void @putch (i32 108)
	call void @putch (i32 99)
	call void @putch (i32 109)
	call void @putch (i32 10)
	%6 = call i32 @getint()
	store i32 %6, i32* %4
	%7 = call i32 @getint()
	store i32 %7, i32* %5
	call void @putch (i32 103)
	call void @putch (i32 99)
	call void @putch (i32 100)
	call void @putch (i32 32)
	call void @putch (i32 105)
	call void @putch (i32 115)
	call void @putch (i32 32)
	%8 = load i32, i32* %4
	%9 = load i32, i32* %5
	%10 = call i32 @gcd(i32 %8, i32 %9)
	call void @putint(i32 %10)
	call void @putch (i32 10)
	call void @putch (i32 108)
	call void @putch (i32 99)
	call void @putch (i32 109)
	call void @putch (i32 32)
	call void @putch (i32 105)
	call void @putch (i32 115)
	call void @putch (i32 32)
	%11 = load i32, i32* %4
	%12 = load i32, i32* %5
	%13 = call i32 @lcm(i32 %11, i32 %12)
	call void @putint(i32 %13)
	call void @putch (i32 10)
	%14 = alloca i32
	%15 = call i32 @getint()
	store i32 %15, i32* %14
	%16 = load i32, i32* %14
	call void @fun4(i32 %16, i32 3, i32 10)
	call void @putch (i32 115)
	call void @putch (i32 99)
	call void @putch (i32 97)
	call void @putch (i32 110)
	call void @putch (i32 102)
	call void @putch (i32 32)
	call void @putch (i32 97)
	call void @putch (i32 32)
	call void @putch (i32 116)
	call void @putch (i32 111)
	call void @putch (i32 32)
	call void @putch (i32 103)
	call void @putch (i32 101)
	call void @putch (i32 116)
	call void @putch (i32 32)
	call void @putch (i32 70)
	call void @putch (i32 105)
	call void @putch (i32 98)
	call void @putch (i32 111)
	call void @putch (i32 110)
	call void @putch (i32 97)
	call void @putch (i32 99)
	call void @putch (i32 99)
	call void @putch (i32 105)
	call void @putch (i32 10)
	%17 = alloca i32
	%18 = call i32 @getint()
	store i32 %18, i32* %17
	call void @putch (i32 102)
	call void @putch (i32 105)
	call void @putch (i32 98)
	call void @putch (i32 32)
	call void @putch (i32 105)
	call void @putch (i32 115)
	call void @putch (i32 32)
	%19 = load i32, i32* %17
	%20 = call i32 @fun5(i32 %19)
	call void @putint(i32 %20)
	call void @putch (i32 10)
	ret i32 0
}

