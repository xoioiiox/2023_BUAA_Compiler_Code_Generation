declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
define dso_local i32 @main() {
1:
	%2 = alloca i32
	store i32 1, i32* %2
	%3 = alloca i32
	%4 = load i32, i32* %2
	store i32 %4, i32* %3
	%5 = alloca i32
	%6 = alloca i32
	%7 = alloca i32
	%8 = call i32 @getint()
	store i32 %8, i32* %6
	%9 = load i32, i32* %2
	%10 = load i32, i32* %2
	%11 = mul i32 %9, %10
	store i32 %11, i32* %7
12:
	%13 = load i32, i32* %7
	%14 = load i32, i32* %6
	%15 = add i32 %14, 1
	%16 = icmp slt i32 %13, %15
	br i1 %16, label %17, label %38
17:
	%18 = load i32, i32* %3
	store i32 %18, i32* %5
	%19 = load i32, i32* %2
	%20 = load i32, i32* %3
	%21 = add i32 %19, %20
	store i32 %21, i32* %3
	%22 = load i32, i32* %5
	store i32 %22, i32* %2
23:
	%24 = load i32, i32* %7
	%25 = mod i32 %24, 2
	%26 = icmp eq i32 %25, 1
	br i1 %26, label %27, label %28
27:
	br label %35
	br label %28
28:
	call void @putch (i32 114)
	call void @putch (i32 111)
	call void @putch (i32 117)
	call void @putch (i32 110)
	call void @putch (i32 100)
	call void @putch (i32 32)
	%29 = load i32, i32* %7
	call void @putint(i32 %29)
	call void @putch (i32 58)
	call void @putch (i32 32)
	%30 = load i32, i32* %2
	call void @putint(i32 %30)
	call void @putch (i32 10)
31:
	%32 = load i32, i32* %7
	%33 = icmp sgt i32 %32, 19
	br i1 %33, label %34, label %35
34:
	br label %38
	br label %35
35:
	%36 = load i32, i32* %7
	%37 = add i32 %36, 1
	store i32 %37, i32* %7
	br label %12
38:
	ret i32 0
}

